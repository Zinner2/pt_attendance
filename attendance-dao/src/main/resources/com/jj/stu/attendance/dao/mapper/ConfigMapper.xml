<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jj.stu.attendance.dao.mapper.ConfigMapper">
    <resultMap id="BaseResultMap" type="com.jj.stu.attendance.dao.model.Config">
        <!--@mbg.generated-->
        <!--@Table s_config-->
        <id column="config_field" jdbcType="VARCHAR" property="configField"/>
        <result column="config_name" jdbcType="VARCHAR" property="configName"/>
        <result column="config_value" jdbcType="VARCHAR" property="configValue"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        config_field, config_name, config_value, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from s_config
        where config_field = #{configField,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from s_config
        where config_field = #{configField,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.jj.stu.attendance.dao.model.Config">
        <!--@mbg.generated-->
        insert into s_config (config_field, config_name, config_value,
        create_time, update_time)
        values (#{configField,jdbcType=VARCHAR}, #{configName,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.jj.stu.attendance.dao.model.Config">
        <!--@mbg.generated-->
        insert into s_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configField != null">
                config_field,
            </if>
            <if test="configName != null">
                config_name,
            </if>
            <if test="configValue != null">
                config_value,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configField != null">
                #{configField,jdbcType=VARCHAR},
            </if>
            <if test="configName != null">
                #{configName,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jj.stu.attendance.dao.model.Config">
        <!--@mbg.generated-->
        update s_config
        <set>
            <if test="configName != null">
                config_name = #{configName,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                config_value = #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where config_field = #{configField,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jj.stu.attendance.dao.model.Config">
        <!--@mbg.generated-->
        update s_config
        set config_name = #{configName,jdbcType=VARCHAR},
        config_value = #{configValue,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where config_field = #{configField,jdbcType=VARCHAR}
    </update>
</mapper>